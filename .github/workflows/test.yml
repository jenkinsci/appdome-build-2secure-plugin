name: Java CI with Maven

on: [ push, pull_request ]

jobs:
  Presign_URLs:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install boto3
        run: |
          python -m pip install --upgrade pip
          pip install boto3
          pip install requests
        shell: bash

      - name: Generate and Publish Presigned URLs
        run: python .github/aws_signer.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload Presigned URLs Artifact
        uses: actions/upload-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls

  android_aab_private_sign:
    runs-on: ubuntu-latest
    needs: android_aab_auto_sign
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testAabAndroidPrivateSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
  android_apk_private_sign:
    runs-on: ubuntu-latest
    needs: android_apk_auto_sign
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testApkAndroidPrivateSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

  android_apk_auto_dev_private_sign:
    runs-on: ubuntu-latest
    needs: android_apk_private_sign
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testApkAndroidAutoDevSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

  android_aab_auto_dev_private_sign:
    runs-on: ubuntu-latest
    needs: android_aab_private_sign
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testAabAndroidAutoDevSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}


  android_aab_auto_sign:
    runs-on: ubuntu-latest
    needs: Presign_URLs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testAabAndroidAutoSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

  android_apk_auto_sign:
    runs-on: ubuntu-latest
    needs: Presign_URLs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for Android
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testApkAndroidAutoSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

  ios_auto_sign:
    runs-on: ubuntu-latest
    needs: Presign_URLs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for iOS
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testIosAutoSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

  ios_private_sign:
    runs-on: ubuntu-latest
    needs: Presign_URLs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for iOS
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testIosPrivateSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}


  ios_auto_dev_private_sign:
    runs-on: ubuntu-latest
    needs: Presign_URLs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Presigned URLs Artifact
        uses: actions/download-artifact@v3
        with:
          name: presigned-urls
          path: presigned_urls
      - name: Install jq
        run: sudo apt-get install jq
      - name: Print working directory and list files
        run: |
          pwd
          ls -a
          ls -a presigned_urls
          cd presigned_urls
          pwd
          ls -a
          cat presigned_urls.json

      - name: Download files from presigned URLs
        run: |
          mkdir downloaded_files
          jq -r 'to_entries|map("\(.key) \(.value|tostring)")|.[]' presigned_urls/presigned_urls.json | while read -r key url; do
            echo "Downloading $key from $url"
            curl -o "downloaded_files/${key}" "$url"
          done
          ls downloaded_files
      - name: Set up JDK 11 with Maven Cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Download dependencies
        run: mvn -B dependency:go-offline
      - name: Build and test for iOS
        run: mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify -Dtest=AppdomeBuilderTest#testIosAutoDevPrivateSignBuild package
        env:
          APPDOME_API_TOKEN: ${{ secrets.APPDOME_API_TOKEN }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}