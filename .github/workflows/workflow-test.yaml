name: Maven CI

on:
  push:
    branches:
      - main
      - testing-enviorment
    tags:
      - v*
  pull_request:
    branches:
      - main
      - testing-enviorment
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or tag to run tests on'
        required: true
        default: 'main'
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      buildParams:
        description: 'Build parameters in JSON format'
        required: true
        default: '{"teamId":"default-teamId", "signOption":"default-signOption", "appFilePath":"default-appFilePath", "keystoreFilePath":"default-keystoreFilePath", "certificateFilePath":"default-certificateFilePath", "fusionSetId":"default-fusionSetId", "signFingerprint":"default-signFingerprint", "entitlementsPath":"default1,default2", "mobileProvisionProfilesPath":"default1,default2", "buildToTest":"default-buildToTest", "buildWithLogs":"false", "googlePlaySign":"false", "secondOutput":"default-secondOutput"}'
      logLevel:
        description: 'Set the log level for Maven builds'
        required: false
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build and Test with Maven
        run: |
          # Extract parameters directly from the JSON input
          teamId=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.teamId')
          signOption=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.signOption')
          appFilePath=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.appFilePath')
          keystoreFilePath=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.keystoreFilePath')
          certificateFilePath=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.certificateFilePath')
          fusionSetId=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.fusionSetId')
          signFingerprint=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.signFingerprint')
          entitlementsPath=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.entitlementsPath')
          mobileProvisionProfilesPath=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.mobileProvisionProfilesPath')
          buildToTest=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.buildToTest')
          buildWithLogs=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.buildWithLogs')
          googlePlaySign=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.googlePlaySign')
          secondOutput=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.secondOutput')
          
          # Echo each parameter to verify parsing worked correctly
          echo "Parsed Parameters:"
          echo "teamId: $teamId"
          echo "signOption: $signOption"
          echo "appFilePath: $appFilePath"
          echo "keystoreFilePath: $keystoreFilePath"
          echo "certificateFilePath: $certificateFilePath"
          echo "fusionSetId: $fusionSetId"
          echo "signFingerprint: $signFingerprint"
          echo "entitlementsPath: $entitlementsPath"
          echo "mobileProvisionProfilesPath: $mobileProvisionProfilesPath"
          echo "buildToTest: $buildToTest"
          echo "buildWithLogs: $buildWithLogs"
          echo "googlePlaySign: $googlePlaySign"
          echo "secondOutput: $secondOutput"

          # Run the Maven command with extracted parameters
          mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify \
            -Dtest=PipelineTest#workFlowTest \
            -DteamId="$teamId" \
            -DsignOption="$signOption" \
            -DappFilePath="$appFilePath" \
            -DkeystoreFilePath="$keystoreFilePath" \
            -DcertificateFilePath="$certificateFilePath" \
            -DfusionSetId="$fusionSetId" \
            -DsignFingerprint="$signFingerprint" \
            -DentitlementsPath="$entitlementsPath" \
            -DmobileProvisionProfilesPath="$mobileProvisionProfilesPath" \
            -DbuildToTest="$buildToTest" \
            -DbuildWithLogs="$buildWithLogs" \
            -DgooglePlaySign="$googlePlaySign" \
            -DsecondOutput="$secondOutput" \
            -Denvironment="${{ github.event.inputs.environment }}" \
            package