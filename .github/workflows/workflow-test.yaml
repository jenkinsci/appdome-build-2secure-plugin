name: Maven CI

on:
  push:
    branches:
      - main
      - testing-enviorment
    tags:
      - v*
  pull_request:
    branches:
      - main
      - testing-enviorment
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or tag to run tests on'
        required: true
        default: 'main'
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      buildParams:
        description: 'Build parameters in JSON format'
        required: true
        default: '{"teamId":"default-teamId", "signOption":"default-signOption", "appFilePath":"default-appFilePath", "keystoreFilePath":"default-keystoreFilePath", "certificateFilePath":"default-certificateFilePath", "fusionSetId":"default-fusionSetId", "signFingerprint":"default-signFingerprint", "entitlementsPath":"default1,default2", "mobileProvisionProfilesPath":"default1,default2", "buildToTest":"default-buildToTest", "buildWithLogs":"false", "googlePlaySign":"false", "secondOutput":"default-secondOutput"}'
      logLevel:
        description: 'Set the log level for Maven builds'
        required: false
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

      - name: Parse Build Parameters
        id: parse_build_params
        run: |
          echo "Parsing build parameters..."
          echo "buildParams=$(echo '${{ github.event.inputs.buildParams }}' | jq -r '.')" >> $GITHUB_ENV

      - name: Build and Test with Maven
        run: |
          mvn -V --color always -ntp -B -Djenkins.test.timeout=700 -Dsurefire.printSummary=true -Dsurefire.useFile=false clean verify \
            -Dtest=PipelineTest#workFlowTest \
            -DteamId='$(echo ${{ env.buildParams }} | jq -r .teamId)' \
            -DsignOption='$(echo ${{ env.buildParams }} | jq -r .signOption)' \
            -DappFilePath='$(echo ${{ env.buildParams }} | jq -r .appFilePath)' \
            -DkeystoreFilePath='$(echo ${{ env.buildParams }} | jq -r .keystoreFilePath)' \
            -DcertificateFilePath='$(echo ${{ env.buildParams }} | jq -r .certificateFilePath)' \
            -DfusionSetId='$(echo ${{ env.buildParams }} | jq -r .fusionSetId)' \
            -DsignFingerprint='$(echo ${{ env.buildParams }} | jq -r .signFingerprint)' \
            -DentitlementsPath='$(echo ${{ env.buildParams }} | jq -r .entitlementsPath)' \
            -DmobileProvisionProfilesPath='$(echo ${{ env.buildParams }} | jq -r .mobileProvisionProfilesPath)' \
            -DbuildToTest='$(echo ${{ env.buildParams }} | jq -r .buildToTest)' \
            -DbuildWithLogs='$(echo ${{ env.buildParams }} | jq -r .buildWithLogs)' \
            -DgooglePlaySign='$(echo ${{ env.buildParams }} | jq -r .googlePlaySign)' \
            -DsecondOutput='$(echo ${{ env.buildParams }} | jq -r .secondOutput)' \
            -Denvironment='${{ github.event.inputs.environment }}' \
            package
        env:
          PATH: /usr/local/bin:$PATH